var nt=Object.defineProperty;var ot=(s,t,e)=>t in s?nt(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var h=(s,t,e)=>(ot(s,typeof t!="symbol"?t+"":t,e),e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))i(n);new MutationObserver(n=>{for(const o of n)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function e(n){const o={};return n.integrity&&(o.integrity=n.integrity),n.referrerPolicy&&(o.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?o.credentials="include":n.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(n){if(n.ep)return;n.ep=!0;const o=e(n);fetch(n.href,o)}})();class u{constructor(t=0,e=0){this.x=t,this.y=e}static zero(){return new u(0,0)}static from(t,e){return new u(t,e)}clone(){return new u(this.x,this.y)}add(t){return new u(this.x+t.x,this.y+t.y)}sub(t){return new u(this.x-t.x,this.y-t.y)}mul(t){return new u(this.x*t,this.y*t)}div(t){return new u(this.x/t,this.y/t)}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}lengthSq(){return this.x*this.x+this.y*this.y}normalize(){const t=this.length();return t===0?u.zero():this.div(t)}perp(){return new u(-this.y,this.x)}rotate(t){const e=Math.cos(t),i=Math.sin(t);return new u(this.x*e-this.y*i,this.x*i+this.y*e)}distanceTo(t){return this.sub(t).length()}lerp(t,e){return this.add(t.sub(this).mul(e))}equals(t,e=1e-6){return Math.abs(this.x-t.x)<e&&Math.abs(this.y-t.y)<e}toString(){return`Vec2(${this.x.toFixed(3)}, ${this.y.toFixed(3)})`}}class st{constructor(t){h(this,"ctx");h(this,"effects",[]);h(this,"quality","medium");h(this,"qualityMultipliers",{low:.5,medium:1,high:2});this.ctx=t}async initialize(){console.log("✨ Particle system initialized")}update(t){const e=t/1e3;for(let i=this.effects.length-1;i>=0;i--){const n=this.effects[i];this.updateEffect(n,e),n.particles.length===0&&this.effects.splice(i,1)}}render(t){this.ctx.save();for(const e of this.effects)this.renderEffect(e,t);this.ctx.restore()}createWaterSplash(t,e=1){const i=Math.floor(20*e*this.qualityMultipliers[this.quality]),n=[];for(let o=0;o<i;o++){const a=o/i*Math.PI*2,r=80+Math.random()*120,l=1.5+Math.random()*1;n.push({position:t.clone(),velocity:u.from(Math.cos(a)*r,Math.sin(a)*r),life:0,maxLife:l,size:2+Math.random()*3,color:"#87ceeb",alpha:.8,gravity:50})}this.effects.push({position:t.clone(),type:"water_splash",intensity:e,particles:n})}createSmokeTrail(t){if(Math.random()>.3)return;const e=[],i=Math.floor(2*this.qualityMultipliers[this.quality]);for(let n=0;n<i;n++){const o=Math.random()*Math.PI*2,a=10+Math.random()*20,r=2+Math.random()*1;e.push({position:t.add(u.from((Math.random()-.5)*5,(Math.random()-.5)*5)),velocity:u.from(Math.cos(o)*a,Math.sin(o)*a),life:0,maxLife:r,size:3+Math.random()*4,color:"#555555",alpha:.6,gravity:-10})}this.effects.push({position:t.clone(),type:"cannonball_smoke",intensity:1,particles:e})}createExplosion(t,e=1){const i=Math.floor(30*e*this.qualityMultipliers[this.quality]),n=[];for(let o=0;o<i;o++){const a=Math.random()*Math.PI*2,r=100+Math.random()*200,l=.5+Math.random()*1;n.push({position:t.clone(),velocity:u.from(Math.cos(a)*r,Math.sin(a)*r),life:0,maxLife:l,size:3+Math.random()*5,color:Math.random()>.5?"#ff6600":"#ffaa00",alpha:1,gravity:0})}this.effects.push({position:t.clone(),type:"explosion",intensity:e,particles:n})}updateQuality(t){this.quality=t,console.log(`✨ Particle quality set to: ${t}`)}shutdown(){this.effects=[],console.log("✨ Particle system shutdown")}updateEffect(t,e){for(let i=t.particles.length-1;i>=0;i--){const n=t.particles[i];if(n.life+=e,n.life>=n.maxLife){t.particles.splice(i,1);continue}this.updateParticle(n,e)}}updateParticle(t,e){t.position=t.position.add(t.velocity.mul(e)),t.velocity=t.velocity.add(u.from(0,t.gravity).mul(e));const i=t.life/t.maxLife;t.alpha=1-i,i>.5&&(t.size*=.95)}renderEffect(t,e){for(const i of t.particles){if(i.alpha<=.1||i.size<=.5||!e.isWorldPositionVisible(i.position,50))continue;const n=e.worldToScreen(i.position),o=e.getState(),a=i.size*o.zoom;a<1||(this.ctx.globalAlpha=i.alpha,this.ctx.fillStyle=i.color,this.ctx.beginPath(),this.ctx.arc(n.x,n.y,a,0,Math.PI*2),this.ctx.fill())}this.ctx.globalAlpha=1}}class at{constructor(t){h(this,"ctx");h(this,"effects",[]);h(this,"nextEffectId",1);this.ctx=t}async initialize(){console.log("🌟 Effect renderer initialized")}update(t){const e=t/1e3;for(let i=this.effects.length-1;i>=0;i--){const n=this.effects[i];if(n.age+=e,n.age>=n.maxAge){this.effects.splice(i,1);continue}this.updateEffect(n,e)}}render(t){this.ctx.save();for(const e of this.effects)if(t.isWorldPositionVisible(e.position,100))switch(e.type){case"muzzle_flash":this.renderMuzzleFlash(e,t);break;case"water_wake":this.renderWaterWake(e,t);break;case"explosion_flash":this.renderExplosionFlash(e,t);break}this.ctx.restore()}createMuzzleFlash(t,e,i=1){const n={id:this.nextEffectId++,type:"muzzle_flash",position:t.clone(),direction:e,size:40*i,age:0,maxAge:.15,intensity:i};this.effects.push(n)}createWaterWake(t,e,i){const n={id:this.nextEffectId++,type:"water_wake",position:t.clone(),direction:e,width:i,points:[t.clone()],age:0,maxAge:5,intensity:1};this.effects.push(n)}createExplosionFlash(t,e=1){const i={id:this.nextEffectId++,type:"explosion_flash",position:t.clone(),age:0,maxAge:.3,intensity:e};this.effects.push(i)}shutdown(){this.effects=[],console.log("🌟 Effect renderer shutdown")}updateEffect(t,e){switch(t.type){case"water_wake":this.updateWaterWake(t,e);break}}updateWaterWake(t,e){if(t.age%.1<e){const n=t.points[t.points.length-1],o=50,a=n.add(u.from(Math.cos(t.direction)*o*.1,Math.sin(t.direction)*o*.1));t.points.push(a),t.points.length>50&&t.points.shift()}}renderMuzzleFlash(t,e){const i=e.worldToScreen(t.position),n=e.getState(),o=t.size*n.zoom,a=1-t.age/t.maxAge;this.ctx.save(),this.ctx.translate(i.x,i.y),this.ctx.rotate(t.direction-n.rotation);const r=this.ctx.createRadialGradient(0,0,0,0,0,o);r.addColorStop(0,`rgba(255, 255, 255, ${a})`),r.addColorStop(.5,`rgba(255, 200, 0, ${a*.8})`),r.addColorStop(1,"rgba(255, 100, 0, 0)"),this.ctx.fillStyle=r,this.ctx.fillRect(-o,-o*.3,o*2,o*.6),this.ctx.restore()}renderWaterWake(t,e){if(t.points.length<2)return;const i=e.getState(),n=Math.max(.1,1-t.age/t.maxAge);this.ctx.strokeStyle=`rgba(255, 255, 255, ${n*.3})`,this.ctx.lineWidth=t.width*i.zoom,this.ctx.lineCap="round",this.ctx.lineJoin="round",this.ctx.beginPath();const o=e.worldToScreen(t.points[0]);this.ctx.moveTo(o.x,o.y);for(let a=1;a<t.points.length;a++){const r=e.worldToScreen(t.points[a]);this.ctx.lineTo(r.x,r.y)}this.ctx.stroke()}renderExplosionFlash(t,e){const i=e.worldToScreen(t.position),n=e.getState(),a=80*t.intensity*n.zoom,r=1-t.age/t.maxAge,l=this.ctx.createRadialGradient(0,0,0,i.x,i.y,a);l.addColorStop(0,`rgba(255, 255, 255, ${r})`),l.addColorStop(.3,`rgba(255, 150, 0, ${r*.8})`),l.addColorStop(.7,`rgba(255, 50, 0, ${r*.4})`),l.addColorStop(1,"rgba(255, 0, 0, 0)"),this.ctx.fillStyle=l,this.ctx.beginPath(),this.ctx.arc(i.x,i.y,a,0,Math.PI*2),this.ctx.fill()}}class rt{constructor(t,e){h(this,"canvas");h(this,"ctx");h(this,"config");h(this,"particleSystem");h(this,"effectRenderer");h(this,"renderQueue",[]);h(this,"waterPattern",null);this.canvas=t,this.config=e;const i=t.getContext("2d");if(!i)throw new Error("Failed to get 2D rendering context");this.ctx=i,this.particleSystem=new st(this.ctx),this.effectRenderer=new at(this.ctx)}async initialize(){console.log("🎨 Initializing render system..."),this.setupCanvasProperties(),await this.createWaterPattern(),await this.particleSystem.initialize(),await this.effectRenderer.initialize(),console.log("✅ Render system initialized")}update(t){this.particleSystem.update(t),this.effectRenderer.update(t)}renderWorld(t,e,i){this.clearCanvas(),this.drawWater(e),this.drawGrid(e),this.queueWorldObjects(t,e,i),this.executeRenderQueue(),this.particleSystem.render(e),this.effectRenderer.render(e)}renderLoadingScreen(t,e){this.clearCanvas(),this.ctx.fillStyle="#1e90ff",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.fillStyle="#ffffff",this.ctx.font="48px Arial",this.ctx.textAlign="center";let i="Loading...";switch(t){case _.INITIALIZING:i="Initializing Game...";break;case _.CONNECTING:i="Connecting to Server...";break;case _.CONNECTED:i="Entering World...";break;case _.DISCONNECTED:i="Disconnected - Reconnecting...";break;case _.ERROR:i="Connection Error",this.ctx.fillStyle="#ff4444";break}this.ctx.fillText(i,this.canvas.width/2,this.canvas.height/2),t!==_.ERROR&&this.drawLoadingSpinner()}getContext(){return this.ctx}onCanvasResize(t,e){this.createWaterPattern()}updateConfig(t){this.config={...t},this.setupCanvasProperties(),this.particleSystem.updateQuality(t.particleQuality)}shutdown(){this.particleSystem.shutdown(),this.effectRenderer.shutdown()}setupCanvasProperties(){this.config.antialiasing?(this.ctx.imageSmoothingEnabled=!0,this.ctx.imageSmoothingQuality="high"):this.ctx.imageSmoothingEnabled=!1}clearCanvas(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height)}async createWaterPattern(){const t=document.createElement("canvas");t.width=64,t.height=64;const e=t.getContext("2d"),i=e.createLinearGradient(0,0,64,64);i.addColorStop(0,"#1e90ff"),i.addColorStop(.5,"#4169e1"),i.addColorStop(1,"#1e90ff"),e.fillStyle=i,e.fillRect(0,0,64,64),e.globalCompositeOperation="overlay",e.fillStyle="#ffffff10";for(let n=0;n<10;n++)e.beginPath(),e.arc(Math.random()*64,Math.random()*64,Math.random()*5+2,0,Math.PI*2),e.fill();this.waterPattern=this.ctx.createPattern(t,"repeat")}drawWater(t){this.waterPattern?this.ctx.fillStyle=this.waterPattern:this.ctx.fillStyle="#1e90ff",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height)}drawGrid(t){t.getState();const e=t.getWorldBounds();this.ctx.strokeStyle="#ffffff20",this.ctx.lineWidth=1;const i=100,n=Math.floor(e.min.x/i)*i,o=Math.ceil(e.max.x/i)*i,a=Math.floor(e.min.y/i)*i,r=Math.ceil(e.max.y/i)*i;for(let l=n;l<=o;l+=i){const c=t.worldToScreen(u.from(l,e.min.y)),d=t.worldToScreen(u.from(l,e.max.y));this.ctx.beginPath(),this.ctx.moveTo(c.x,c.y),this.ctx.lineTo(d.x,d.y),this.ctx.stroke()}for(let l=a;l<=r;l+=i){const c=t.worldToScreen(u.from(e.min.x,l)),d=t.worldToScreen(u.from(e.max.x,l));this.ctx.beginPath(),this.ctx.moveTo(c.x,c.y),this.ctx.lineTo(d.x,d.y),this.ctx.stroke()}}queueWorldObjects(t,e,i){this.renderQueue=[];for(const n of t.ships)this.queueRenderItem(1,"ships",()=>this.drawShip(n,e));for(const n of t.players)this.queueRenderItem(2,"players",()=>this.drawPlayer(n,e));for(const n of t.cannonballs)this.queueRenderItem(3,"cannonballs",()=>this.drawCannonball(n,e))}queueRenderItem(t,e,i,n=0){this.renderQueue.push({layer:t,layerName:e,renderFn:i,priority:n})}executeRenderQueue(){this.renderQueue.sort((t,e)=>t.layer!==e.layer?t.layer-e.layer:(t.priority||0)-(e.priority||0));for(const t of this.renderQueue)try{t.renderFn()}catch(e){console.error(`Error rendering ${t.layerName}:`,e)}}drawShip(t,e){if(!e.isWorldPositionVisible(t.position,200))return;this.ctx.save();const i=e.worldToScreen(t.position),n=e.getState();this.ctx.translate(i.x,i.y),this.ctx.scale(n.zoom,n.zoom),this.ctx.rotate(t.rotation-n.rotation),this.drawShipHull(t),this.ctx.strokeStyle="#ff0000",this.ctx.lineWidth=4/n.zoom,this.ctx.beginPath(),this.ctx.moveTo(0,0),this.ctx.lineTo(80,0),this.ctx.stroke(),this.ctx.restore()}drawShipHull(t){if(t.hull.length!==0){this.ctx.strokeStyle="#8B4513",this.ctx.fillStyle="#DEB887",this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.moveTo(t.hull[0].x,t.hull[0].y);for(let e=1;e<t.hull.length;e++)this.ctx.lineTo(t.hull[e].x,t.hull[e].y);this.ctx.closePath(),this.ctx.fill(),this.ctx.stroke()}}drawPlayer(t,e){if(!e.isWorldPositionVisible(t.position,50))return;const i=e.worldToScreen(t.position),n=e.getState(),o=t.radius*n.zoom;this.ctx.fillStyle=t.onDeck?"#00ff00":"#ff0000",this.ctx.strokeStyle="#ffffff",this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.arc(i.x,i.y,o,0,Math.PI*2),this.ctx.fill(),this.ctx.stroke(),this.ctx.strokeStyle="#ffff00",this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.moveTo(i.x,i.y);const a=e.worldToScreen(t.position.add(t.velocity.mul(.1)));this.ctx.lineTo(a.x,a.y),this.ctx.stroke()}drawCannonball(t,e){if(!e.isWorldPositionVisible(t.position,20))return;const i=e.worldToScreen(t.position),n=e.getState(),o=t.radius*n.zoom;this.ctx.fillStyle="#333333",this.ctx.strokeStyle="#000000",this.ctx.lineWidth=1,this.ctx.beginPath(),this.ctx.arc(i.x,i.y,o,0,Math.PI*2),this.ctx.fill(),this.ctx.stroke()}drawLoadingSpinner(){const t=this.canvas.width/2,e=this.canvas.height/2+100,i=30,n=Date.now()/100;this.ctx.strokeStyle="#ffffff",this.ctx.lineWidth=4,this.ctx.lineCap="round",this.ctx.beginPath(),this.ctx.arc(t,e,i,n,n+Math.PI*1.5),this.ctx.stroke()}}class ct{constructor(t,e){h(this,"viewport");h(this,"state");h(this,"targetPosition",null);h(this,"velocity",u.zero());this.viewport=t,this.state={position:e.position.clone(),zoom:e.zoom,rotation:e.rotation}}getState(){return{position:this.state.position.clone(),zoom:this.state.zoom,rotation:this.state.rotation}}setPosition(t){this.state.position=t.clone(),this.targetPosition=null}setZoom(t){this.state.zoom=Math.max(.1,Math.min(10,t))}setRotation(t){this.state.rotation=t}setTarget(t){this.targetPosition=t.clone()}followTarget(t,e,i){if(!t)return;const n=t.sub(this.state.position);if(n.lengthSq()<.1){this.state.position=t.clone(),this.velocity=u.zero();return}const o=e,a=2*Math.sqrt(o),r=n.mul(o).sub(this.velocity.mul(a));this.velocity=this.velocity.add(r.mul(i)),this.state.position=this.state.position.add(this.velocity.mul(i))}zoomBy(t,e){const i=this.screenToWorld(e),n=this.state.zoom*t;this.setZoom(n);const o=this.worldToScreen(i),a=e.sub(o),r=this.screenToWorldDelta(a);this.state.position=this.state.position.sub(r)}worldToScreen(t){const i=t.sub(this.state.position).mul(this.state.zoom),n=Math.cos(-this.state.rotation),o=Math.sin(-this.state.rotation);return u.from(i.x*n-i.y*o,i.x*o+i.y*n).add(u.from(this.viewport.width/2,this.viewport.height/2))}screenToWorld(t){const e=t.sub(u.from(this.viewport.width/2,this.viewport.height/2)),i=Math.cos(this.state.rotation),n=Math.sin(this.state.rotation);return u.from(e.x*i-e.y*n,e.x*n+e.y*i).mul(1/this.state.zoom).add(this.state.position)}screenToWorldDelta(t){const e=Math.cos(this.state.rotation),i=Math.sin(this.state.rotation);return u.from(t.x*e-t.y*i,t.x*i+t.y*e).mul(1/this.state.zoom)}getWorldBounds(){const t=this.screenToWorld(u.zero()),e=this.screenToWorld(u.from(this.viewport.width,0)),i=this.screenToWorld(u.from(0,this.viewport.height)),n=this.screenToWorld(u.from(this.viewport.width,this.viewport.height)),o=[t,e,i,n];let a=o[0].x,r=o[0].y,l=o[0].x,c=o[0].y;for(const d of o)a=Math.min(a,d.x),r=Math.min(r,d.y),l=Math.max(l,d.x),c=Math.max(c,d.y);return{min:u.from(a,r),max:u.from(l,c)}}isWorldPositionVisible(t,e=0){const i=this.getWorldBounds();return t.x>=i.min.x-e&&t.x<=i.max.x+e&&t.y>=i.min.y-e&&t.y<=i.max.y+e}setViewport(t){this.viewport={...t}}getViewport(){return{...this.viewport}}}var W=(s=>(s.DISCONNECTED="disconnected",s.CONNECTING="connecting",s.CONNECTED="connected",s.RECONNECTING="reconnecting",s.ERROR="error",s))(W||{});class lt{constructor(t){h(this,"config");h(this,"socket",null);h(this,"connectionState","disconnected");h(this,"reconnectAttempts",0);h(this,"reconnectTimer",null);h(this,"pingTimer",null);h(this,"messageSequenceId",0);h(this,"pendingPings",new Map);h(this,"playerName","Player_"+Math.random().toString(36).substr(2,5));h(this,"stats",{ping:0,packetLoss:0,bytesReceived:0,bytesSent:0,messagesReceived:0,messagesSent:0,averageFPS:30});h(this,"latency",0);h(this,"onWorldStateReceived",null);h(this,"onConnectionStateChanged",null);this.config=t}setWorldStateHandler(t){this.onWorldStateReceived=t}setConnectionStateHandler(t){this.onConnectionStateChanged=t}getStats(){return{ping:this.latency,packetLoss:0,bytesReceived:this.stats.bytesReceived,bytesSent:this.stats.bytesSent,messagesReceived:this.stats.messagesReceived,messagesSent:this.stats.messagesSent,averageFPS:0}}async connect(t){var e;if(t&&(this.playerName=t),!(this.connectionState==="connecting"||this.connectionState==="connected")){this.connectionState="connecting",console.log(`🌐 Connecting to server: ${this.config.serverUrl}`);try{this.socket=new WebSocket(this.config.serverUrl),this.setupSocketHandlers(),await this.waitForConnection(),await this.sendHandshake(),this.startHeartbeat(),this.connectionState="connected",this.reconnectAttempts=0,console.log("✅ Connected to server"),(e=this.onConnectionStateChanged)==null||e.call(this,"connected")}catch(i){throw this.connectionState="error",console.error("❌ Failed to connect to server:",i),this.scheduleReconnect(),i}}}disconnect(){var t;console.log("🔌 Disconnecting from server..."),this.connectionState="disconnected",this.reconnectTimer&&(clearTimeout(this.reconnectTimer),this.reconnectTimer=null),this.pingTimer&&(clearInterval(this.pingTimer),this.pingTimer=null),this.socket&&(this.socket.close(),this.socket=null),(t=this.onConnectionStateChanged)==null||t.call(this,"disconnected"),console.log("✅ Disconnected from server")}async sendHandshake(){return new Promise((t,e)=>{if(!this.socket){e(new Error("No socket available"));return}const i=`JOIN:${this.playerName}`,n=setTimeout(()=>{e(new Error("Handshake timeout"))},5e3),o=this.socket.onmessage;this.socket.onmessage=a=>{try{a.data.startsWith("WELCOME")?(clearTimeout(n),this.socket.onmessage=o,console.log("🤝 Handshake completed - Server welcomed player"),this.requestGameState(),t()):o==null||o.call(this.socket,a)}catch(r){console.warn("Error during handshake:",r),clearTimeout(n),this.socket.onmessage=o,console.log("🤝 Handshake completed (no WELCOME response)"),this.requestGameState(),t()}},this.socket.send(i),this.stats.messagesSent++,this.stats.bytesSent+=i.length,console.log("📤 Sent handshake:",i)})}requestGameState(){this.socket&&this.socket.readyState===WebSocket.OPEN&&(this.socket.send("STATE"),this.stats.messagesSent++,this.stats.bytesSent+=5,console.log("📤 Requested game state from server"))}sendInput(t){if(this.connectionState!=="connected"||!this.socket)return;const e={type:"input_frame",timestamp:Date.now(),sequenceId:this.messageSequenceId++,inputFrame:t};this.sendMessage(e)}getNetworkStats(){return{...this.stats}}getConnectionState(){return this.connectionState}setupSocketHandlers(){this.socket&&(this.socket.onopen=t=>{console.log("🔗 WebSocket opened")},this.socket.onmessage=t=>{try{const e=t.data;let i;e.startsWith("{")?i=JSON.parse(e):i={type:e.toLowerCase(),timestamp:Date.now(),sequenceId:this.messageSequenceId-1},this.handleMessage(i),this.stats.messagesReceived++,this.stats.bytesReceived+=e.length}catch(e){console.error("Failed to parse message:",e,"Data:",t.data),this.stats.messagesReceived++,this.stats.bytesReceived+=t.data.length}},this.socket.onclose=t=>{var e;console.log("🔌 WebSocket closed:",t.code,t.reason),this.connectionState==="connected"&&(this.connectionState="disconnected",(e=this.onConnectionStateChanged)==null||e.call(this,"disconnected"),this.scheduleReconnect())},this.socket.onerror=t=>{console.error("❌ WebSocket error:",t),this.connectionState="error"})}async waitForConnection(){return new Promise((t,e)=>{if(!this.socket){e(new Error("No socket created"));return}const i=setTimeout(()=>{e(new Error("Connection timeout"))},this.config.timeoutDuration);this.socket.onopen=()=>{clearTimeout(i),t()},this.socket.onerror=()=>{clearTimeout(i),e(new Error("Connection failed"))}})}handleMessage(t){var e,i;switch(t.type){case"world_state":case"snapshot":t.worldState&&((e=this.onWorldStateReceived)==null||e.call(this,t.worldState));break;case"GAME_STATE":const n={tick:t.tick||0,timestamp:Date.now(),ships:t.ships||[],players:t.players||[],cannonballs:t.projectiles||[],carrierDetection:new Map};console.log(`🗺️ Received game state - Tick: ${n.tick}, Players: ${n.players.length}, Ships: ${n.ships.length}`),(i=this.onWorldStateReceived)==null||i.call(this,n);break;case"pong":case"pong":this.handlePong(t);break;case"handshake_response":console.log("🤝 Received handshake response:",t);break;case"message_ack":console.log("✅ Server acknowledged message:",t.status);break;default:console.log("📦 Received message:",t.type,t);break}}handlePong(t){if(!t.sequenceId)return;const e=this.pendingPings.get(t.sequenceId);if(e){const i=Date.now()-e;this.stats.ping=i,this.pendingPings.delete(t.sequenceId)}}sendMessage(t){if(!(!this.socket||this.socket.readyState!==WebSocket.OPEN))try{const e=JSON.stringify(t);this.socket.send(e),this.stats.messagesSent++,this.stats.bytesSent+=e.length}catch(e){console.error("Failed to send message:",e)}}startHeartbeat(){this.pingTimer=setInterval(()=>{this.sendPing(),Math.random()<.3&&this.requestGameState()},this.config.heartbeatInterval)}sendPing(){const t=this.messageSequenceId++,e=Date.now();if(this.socket&&this.socket.readyState===WebSocket.OPEN){this.socket.send("PING"),this.pendingPings.set(t,e),this.stats.messagesSent++,this.stats.bytesSent+=4;const i=e-1e4;for(const[n,o]of this.pendingPings.entries())o<i&&this.pendingPings.delete(n)}}scheduleReconnect(){if(this.reconnectAttempts>=this.config.maxReconnectAttempts){console.error("❌ Max reconnection attempts reached"),this.connectionState="error";return}this.reconnectAttempts++;const t=this.config.reconnectDelay*Math.pow(2,this.reconnectAttempts-1);console.log(`🔄 Scheduling reconnect attempt ${this.reconnectAttempts} in ${t}ms`),this.connectionState="reconnecting",this.reconnectTimer=setTimeout(()=>{this.connect().catch(e=>{console.error("Reconnection failed:",e)})},t)}}class O{static wrap(t){for(;t>Math.PI;)t-=2*Math.PI;for(;t<-Math.PI;)t+=2*Math.PI;return t}static diff(t,e){return O.wrap(t-e)}static lerp(t,e,i){const n=O.diff(e,t);return O.wrap(t+n*i)}static toRadians(t){return t*Math.PI/180}static toDegrees(t){return t*180/Math.PI}}class D{static pointInPolygon(t,e,i=0){if(e.length<3)return!1;let n=!1;const o=e.length;for(let a=0,r=o-1;a<o;r=a++){const l=e[a],c=e[r];if(l.y>t.y!=c.y>t.y){const d=(c.x-l.x)*(t.y-l.y)/(c.y-l.y)+l.x;t.x<d&&(n=!n)}}if(!n&&i>0)for(let a=0;a<o;a++){const r=(a+1)%o;if(D.pointToSegmentDistance(t,e[a],e[r])<=i)return!0}return n}static pointToSegmentDistance(t,e,i){const n=i.sub(e),o=n.length();if(o===0)return t.distanceTo(e);const a=Math.max(0,Math.min(1,t.sub(e).dot(n)/o)),r=e.add(n.mul(a));return t.distanceTo(r)}static closestPointOnPolygon(t,e){if(e.length===0)return t.clone();if(e.length===1)return e[0].clone();let i=e[0].clone(),n=t.distanceTo(e[0]);for(let o=0;o<e.length;o++){const a=(o+1)%e.length,r=e[o],c=e[a].sub(r),d=c.lengthSq();if(d===0){const y=t.distanceTo(r);y<n&&(n=y,i=r.clone());continue}const f=Math.max(0,Math.min(1,t.sub(r).dot(c)/d)),m=r.add(c.mul(f)),p=t.distanceTo(m);p<n&&(n=p,i=m)}return i}static sweptCircleVsSegment(t,e,i,n,o){const a={hit:!1,time:1,point:u.zero(),normal:u.zero()},r=e.sub(t),l=o.sub(n),c=l.perp().normalize();if(r.dot(c)>=0)return a;const d=t.sub(n).dot(c),f=e.sub(n).dot(c);if(Math.abs(d)<=i||Math.abs(f)<=i){const m=(Math.abs(d)-i)/Math.abs(r.dot(c));if(m>=0&&m<=1){const p=t.add(r.mul(m)),y=l.lengthSq();if(y>0){const g=p.sub(n).dot(l)/y;g>=0&&g<=1&&(a.hit=!0,a.time=m,a.point=n.add(l.mul(g)),a.normal=c.mul(d<0?-1:1))}}}return a}static slideAlongPolygon(t,e,i,n,o){let a=t.clone(),r=e.clone();const l=t.add(e.mul(o));for(let c=0;c<3;c++){let d=null,f=1;for(let g=0;g<n.length;g++){const x=(g+1)%n.length,w=D.sweptCircleVsSegment(a,l,i,n[g],n[x]);w.hit&&w.time<f&&(f=w.time,d=w)}if(!d){a=l;break}const m=l.sub(a);a=a.add(m.mul(d.time));const p=m.mul(1-d.time),y=p.sub(d.normal.mul(p.dot(d.normal)));if(r=y.div(o),y.lengthSq()<.001)break}return{newPosition:a,newVelocity:r}}static distanceToPolygonEdge(t,e){if(e.length<3)return 0;let i=1/0,n=!1;for(let o=0,a=e.length-1;o<e.length;a=o++){const r=e[o],l=e[a];r.y>t.y!=l.y>t.y&&t.x<(l.x-r.x)*(t.y-r.y)/(l.y-r.y)+r.x&&(n=!n)}for(let o=0;o<e.length;o++){const a=(o+1)%e.length,r=e[o],c=e[a].sub(r),d=c.lengthSq();if(d===0){const y=t.distanceTo(r);i=Math.min(i,y);continue}const f=Math.max(0,Math.min(1,t.sub(r).dot(c)/d)),m=r.add(c.mul(f)),p=t.distanceTo(m);i=Math.min(i,p)}return n?i:-i}}const R={SIM_TICK_RATE:60,SNAPSHOT_RATE:15,INTERP_BUFFER_MS:120,EPS_FACTOR:.03,N_IN:3,N_OUT:8,SWITCH_COOLDOWN_MS:200,HISTORY_TICKS:20,ICE_DRIFT_HALF_LIFE:.35,PLAYER_SPEED:200,PLAYER_RADIUS:8,CANNONBALL_SPEED:400,CANNONBALL_RANGE:800,CANNONBALL_RADIUS:8,CANNONBALL_RELOAD_TIME:3,SPLASH_RADIUS:50},A=[],V=class V{static trackCollision(t,e,i,n,o,a=!0,r){A.push({timestamp:Date.now(),playerPosition:t,collisionPoint:e,normal:i,penetrationDepth:n,slideDistance:o,isPlankCollision:a,plankId:r});const l=Date.now()-5e3;for(;A.length>0&&A[0].timestamp<l;)A.shift();A.length>100&&A.splice(0,50)}static getRecentCollisions(){return[...A]}static clearCollisionTracking(){A.length=0}static sweptCircleVsPolygon(t){const{startPos:e,endPos:i,radius:n,velocity:o,polygon:a,epsilon:r}=t,l=n+r,c=D.pointInPolygon(e,a,l),d=D.pointInPolygon(i,a,l);return c&&d?{newPosition:i,newVelocity:o,collided:!1,normal:u.zero(),penetrationDepth:0,contactPoint:i,slideDistance:0}:c&&!d?this.handleExitCollision(t):!c&&!d?this.handleEntryOrSlide(t):this.handleEntry(t)}static handleExitCollision(t){const{startPos:e,endPos:i,radius:n,velocity:o,polygon:a,epsilon:r}=t,l=n+r,c=i.sub(e);let d=null,f=1/0;for(let y=0;y<a.length;y++){const g=a[y],x=a[(y+1)%a.length],w=this.rayVsLineSegment(e,c,g,x,l);w&&w.t<f&&w.t>=0&&w.t<=1&&(f=w.t,d={edge:[g,x],t:w.t,normal:w.normal})}if(!d)return this.clampToClosestPoint(t);const m=e.add(c.mul(d.t)),p=this.calculateSlideVelocity(o,d.normal);return{newPosition:m,newVelocity:p,collided:!0,normal:d.normal,penetrationDepth:0,contactPoint:m,slideDistance:p.length()*t.dt}}static handleEntryOrSlide(t){return this.sweptCirclePolygon(t)}static sweptCirclePolygon(t){const{startPos:e,endPos:i,radius:n,polygon:o,epsilon:a,velocity:r}=t,l=n+a,c=i.sub(e),d=c.length();if(d<1e-6)return this.clampToClosestPoint(t);const f=c.normalize();let m=1/0,p=u.zero(),y=e;for(let g=0;g<o.length;g++){const x=o[g],S=o[(g+1)%o.length].sub(x),P=S.length();if(P<1e-6)continue;const k=S.normalize(),v=u.from(-k.y,k.x),C=-f.dot(v);if(C<=0)continue;const I=(e.sub(x).dot(v)-l)/C;if(I<0||I>d/r.length())continue;const T=e.add(f.mul(I*r.length())),N=T.sub(x).dot(k);N>=0&&N<=P&&I<m&&(m=I,p=v,y=T)}for(const g of o){const x=e.sub(g),w=c.dot(c),S=2*x.dot(c),P=x.dot(x)-l*l,k=S*S-4*w*P;if(k>=0){const v=(-S-Math.sqrt(k))/(2*w),C=(-S+Math.sqrt(k))/(2*w),M=v>=0&&v<=1?v:C>=0&&C<=1?C:-1;if(M>=0&&M<m/d){const b=e.add(c.mul(M)),I=b.sub(g).normalize();m=M*d,p=I,y=b}}}if(m<1/0){const g=f.sub(p.mul(f.dot(p))),x=d-m,w=g.mul(r.length());return{newPosition:y.add(g.mul(x)),newVelocity:w,collided:!0,normal:p,penetrationDepth:0,contactPoint:y,slideDistance:x}}return{newPosition:i,newVelocity:r,collided:!1,normal:u.zero(),penetrationDepth:0,contactPoint:i,slideDistance:0}}static handleEntry(t){return{newPosition:t.endPos,newVelocity:t.velocity,collided:!1,normal:u.zero(),penetrationDepth:0,contactPoint:t.endPos,slideDistance:0}}static clampToClosestPoint(t){const{endPos:e,radius:i,polygon:n,epsilon:o}=t,a=i+o,r=D.closestPointOnPolygon(e,n),l=e.sub(r),c=l.length();if(c<a){const d=c>0?l.normalize():u.from(0,-1);return{newPosition:r.add(d.mul(a)),newVelocity:u.zero(),collided:!0,normal:d,penetrationDepth:a-c,contactPoint:r,slideDistance:0}}return{newPosition:e,newVelocity:t.velocity,collided:!1,normal:u.zero(),penetrationDepth:0,contactPoint:e,slideDistance:0}}static rayVsLineSegment(t,e,i,n,o){const a=n.sub(i),r=a.length();if(r<1e-10)return null;const c=a.normalize().perp(),f=i.add(c.mul(o)).sub(t),m=e.length();if(m<1e-10)return null;const p=e.normalize(),y=p.x*a.y-p.y*a.x;if(Math.abs(y)<1e-10)return null;const g=(f.x*a.y-f.y*a.x)/y,x=(f.x*p.y-f.y*p.x)/y;return x>=0&&x<=r&&g>=0?{t:g/m,normal:c.mul(-1)}:null}static calculateSlideVelocity(t,e){const i=t.dot(e);return i>=0?t:t.sub(e.mul(i))}static resolvePenetration(t,e,i,n){const o=e.length()+n;if(D.pointInPolygon(t,i,o)){const a=D.closestPointOnPolygon(t,i),r=t.sub(a),l=r.length(),c=o-l;if(c>0){const d=l>0?r.normalize():u.from(0,-1);return{newPosition:a.add(d.mul(o)),penetrationDepth:c,normal:d}}}return{newPosition:t,penetrationDepth:0,normal:u.zero()}}static createPlankCollisionSegments(t){const e=[],i=t.modules.filter(n=>n.kind!=="plank"||!n.moduleData||n.moduleData.kind!=="plank"?!1:n.moduleData.health>0);for(const n of i)if(n.moduleData&&n.moduleData.kind==="plank"){const o=n.moduleData,a=n.localPos,r=n.localRot,l=o.length/2,c=o.width/2,m=[u.from(-l,-c),u.from(l,-c),u.from(l,c),u.from(-l,c)].map(p=>p.rotate(r).add(a)).map(p=>p.rotate(t.rotation).add(t.position));for(let p=0;p<m.length;p++){const y=m[p],g=m[(p+1)%m.length];e.push({start:y,end:g,plankId:n.id})}}return e}static sweptCircleVsPlankSegments(t,e,i,n,o,a,r,l=!0,c=!1){const d=this.createPlankCollisionSegments(o),f=[];if(l){const S=o.modules.filter(P=>P.kind==="ladder");for(const P of S)if(P.moduleData&&P.moduleData.kind==="ladder"){const k=P.moduleData,v=P.localPos,C=k.length,M=k.width,b=k.extendDirection||Math.PI,I=u.from(Math.cos(b),Math.sin(b)),T=I.perp(),E=M/2,N=v.add(I.mul(C)),H=[v.add(T.mul(E)),v.add(T.mul(-E)),N.add(T.mul(-E)),N.add(T.mul(E))].map(it=>it.rotate(o.rotation).add(o.position));f.push(H)}}const m=f.some(S=>D.pointInPolygon(t,S,i+a)||D.pointInPolygon(e,S,i+a)),p=this.isPlayerInsideShipBounds(t,o,i+a),y=this.isPlayerInsideShipBounds(e,o,i+a);if(p&&!y&&!c&&!m){const S=this.clampPlayerToShipBounds(e,o,i+a),P=S.sub(t),k=P.length()>0?P.normalize().mul(n.length()):u.zero(),v=S.sub(e),C=v.length()>0?v.normalize():u.from(0,-1);return V.trackCollision(t,S,C,e.sub(S).length(),P.length(),!0,-1),{newPosition:S,newVelocity:k,collided:!0,normal:C,penetrationDepth:e.sub(S).length(),contactPoint:S,slideDistance:P.length()}}if(c)return{newPosition:e,newVelocity:n,collided:!1,normal:u.zero(),penetrationDepth:0,contactPoint:u.zero(),slideDistance:0};if(m&&!p&&y&&l)return{newPosition:e,newVelocity:n,collided:!1,normal:u.zero(),penetrationDepth:0,contactPoint:u.zero(),slideDistance:0};let g=null,x=1/0,w;for(const S of d){const P=S.start,k=S.end,v=D.sweptCircleVsSegment(t,e,i,P,k);if(v.hit&&v.time<x){x=v.time,w=S.plankId;const C=t.add(e.sub(t).mul(v.time)),M=n.dot(v.normal),b=n.sub(v.normal.mul(M*2));g={newPosition:C,newVelocity:b,collided:!0,normal:v.normal,penetrationDepth:0,contactPoint:v.point,slideDistance:0}}}return g?(V.trackCollision(t,g.contactPoint,g.normal,g.penetrationDepth,g.slideDistance,!0,w),g):{newPosition:e,newVelocity:n,collided:!1,normal:u.zero(),penetrationDepth:0,contactPoint:u.zero(),slideDistance:0}}static isPlayerInsideShipBounds(t,e,i){const n=this.getTransformedShipHull(e);return D.pointInPolygon(t,n,i)}static getTransformedShipHull(t){const e=t.id.toString(),i=this.hullCache.get(e);if(i&&i.position.equals(t.position)&&Math.abs(i.rotation-t.rotation)<1e-6)return i.hull;const n=t.hull.map(o=>o.rotate(t.rotation).add(t.position));return this.hullCache.set(e,{hull:n,position:t.position,rotation:t.rotation}),n}static clearHullCache(){this.hullCache.clear()}static clampPlayerToShipBounds(t,e,i){const n=this.getTransformedShipHull(e),o=D.closestPointOnPolygon(t,n),a=e.position,r=a.sub(o);if(r.length()<1e-6)return a;const l=r.normalize();return o.add(l.mul(i))}};h(V,"hullCache",new Map);let B=V;const Y=new Map;function dt(s){var r;const t=`${s.id}`,e=Date.now(),i=Y.get(t);if(i&&e-i.lastUpdate<33)return i.polygon;let n=0,o=0;for(const l of s.modules)l.kind==="plank"&&((r=l.moduleData)==null?void 0:r.kind)==="plank"&&(o++,l.moduleData.health>0&&n++);let a;return o===0?a=s.hull.slice():n===0?a=[]:n/o<.5?a=s.hull.map(c=>c.mul(.7)):a=s.hull.slice(),Y.set(t,{polygon:a,lastUpdate:e}),a}function ht(s,t,e=0){const i=dt(t);if(i.length===0)return!1;const n=s.sub(t.position).rotate(-t.rotation);return ut(n,i,e)}function ut(s,t,e=0){if(t.length<3)return!1;let i=!1;const n=s.x,o=s.y;for(let a=0,r=t.length-1;a<t.length;r=a++){const l=t[a].x,c=t[a].y,d=t[r].x,f=t[r].y;c>o!=f>o&&n<(d-l)*(o-c)/(f-c)+l&&(i=!i)}if(!i&&e>0)for(let a=0;a<t.length;a++){const r=t[a],c=t[(a+1)%t.length].sub(r),d=s.sub(r);if(c.lengthSq()<1e-10)continue;const f=Math.max(0,Math.min(1,d.dot(c)/c.lengthSq())),m=r.add(c.mul(f));if(s.sub(m).length()<=e)return!0}return i}const G={CONFIRM_IN_TICKS:2,CONFIRM_OUT_TICKS:1,SWITCH_COOLDOWN_MS:50,EPSILON_FACTOR:1.5,PENETRATION_WEIGHT:10,VELOCITY_WEIGHT:1};function ft(){return{currentCarrierId:null,candidateStates:new Map,lastSwitchTime:0,switchCooldownMs:G.SWITCH_COOLDOWN_MS,confirmInTicks:G.CONFIRM_IN_TICKS,confirmOutTicks:G.CONFIRM_OUT_TICKS}}function mt(s,t,e,i){const n=[],o={...e};o.candidateStates=new Map(e.candidateStates);const a=G.EPSILON_FACTOR*s.radius;if(o.currentCarrierId!==null&&s.velocity.length()>R.PLAYER_SPEED*.8){const c=t.find(d=>d.id===o.currentCarrierId);if(c&&s.velocity.sub(c.velocity).length()>R.PLAYER_SPEED*.6)return console.log(`Player ${s.id} swimming fast but marked on-deck - forcing exit`),o.candidateStates.delete(o.currentCarrierId),n.push({type:"leftDeck",playerId:s.id,newCarrierId:null,oldCarrierId:o.currentCarrierId,timestamp:i}),n.push({type:"carrierChanged",playerId:s.id,newCarrierId:null,oldCarrierId:o.currentCarrierId,timestamp:i}),o.currentCarrierId=null,o.lastSwitchTime=i,{newState:o,events:n}}const r=new Map;if(o.currentCarrierId!==null){const c=t.find(d=>d.id===o.currentCarrierId);if(c&&s.position.distanceTo(c.position)>400)return o.candidateStates.delete(o.currentCarrierId),n.push({type:"leftDeck",playerId:s.id,newCarrierId:null,oldCarrierId:o.currentCarrierId,timestamp:i}),n.push({type:"carrierChanged",playerId:s.id,newCarrierId:null,oldCarrierId:o.currentCarrierId,timestamp:i}),o.currentCarrierId=null,o.lastSwitchTime=i,{newState:o,events:n}}for(const c of t){if(!yt(s,c,a))continue;const d=gt(s,c,a);if(d.penetrationDepth>0){const f=o.candidateStates.get(c.id),m=f?f.confirmationTicks+1:1;r.set(c.id,{shipId:c.id,penetrationDepth:d.penetrationDepth,relativeVelocity:d.relativeVelocity,confirmationTicks:m,lastDetected:i})}}for(const[c,d]of o.candidateStates.entries())r.has(c)||(d.confirmationTicks=Math.max(0,d.confirmationTicks-1));for(const[c,d]of r.entries())o.candidateStates.set(c,d);for(const[c,d]of o.candidateStates.entries())d.confirmationTicks===0&&!r.has(c)&&o.candidateStates.delete(c);const l=St(o,i);if(l!==o.currentCarrierId){const c=o.currentCarrierId;c!==null&&l===null&&(console.log(`Player ${s.id} fell off ship ${c}!`),n.push({type:"leftDeck",playerId:s.id,newCarrierId:l,oldCarrierId:c,timestamp:i})),l!==c&&(console.log(`Player ${s.id} carrier changed: ${c} -> ${l}`),n.push({type:"carrierChanged",playerId:s.id,newCarrierId:l,oldCarrierId:c,timestamp:i})),o.currentCarrierId=l,o.lastSwitchTime=i}return{newState:o,events:n}}function pt(s){let e=s.hull.slice();const i=s.modules.filter(o=>o.kind==="ladder");if(i.length===0)return e;const n=[...e];for(const o of i)if(o.moduleData&&o.moduleData.kind==="ladder"){const a=o.moduleData,r=o.localPos,l=a.width,c=a.length,d=a.extendDirection||Math.PI,f=u.from(Math.cos(d),Math.sin(d)),m=f.perp(),p=l/2,y=r.add(f.mul(c)),g=[r.add(m.mul(p)),r.add(m.mul(-p)),y.add(m.mul(-p)),y.add(m.mul(p))];n.push(...g)}return n}function gt(s,t,e){const n=s.position.sub(t.position).rotate(-t.rotation);if(!ht(s.position,t,e))return{penetrationDepth:0,relativeVelocity:0};const a=pt(t),r=D.distanceToPolygonEdge(n,a),l=s.velocity,c=t.velocity.add(n.perp().mul(t.angularVelocity)),d=l.sub(c).length();return{penetrationDepth:r,relativeVelocity:d}}function yt(s,t,e){const i=s.position.distanceTo(t.position),o=300+e+s.radius;return i<=o}function St(s,t){if(t-s.lastSwitchTime<s.switchCooldownMs){const n=s.currentCarrierId?s.candidateStates.get(s.currentCarrierId):null;if(n&&n.confirmationTicks>=s.confirmInTicks)return s.currentCarrierId;if(!n||n.confirmationTicks===0)return null}const i=[];for(const n of s.candidateStates.values())n.confirmationTicks>=s.confirmInTicks&&i.push(n);if(i.length===0){const n=s.currentCarrierId?s.candidateStates.get(s.currentCarrierId):null;return n&&n.confirmationTicks>0?s.currentCarrierId:null}return i.length===1||i.sort((n,o)=>{const a=o.penetrationDepth-n.penetrationDepth;if(Math.abs(a)>.1)return a>0?1:-1;const r=n.relativeVelocity-o.relativeVelocity;return Math.abs(r)>.1?r>0?1:-1:n.shipId-o.shipId}),i[0].shipId}const F={JUMP:1,INTERACT:2,DISMOUNT:4,DESTROY_PLANK:8};function wt(s,t,e){const i={tick:s.tick+1,ships:s.ships.map(r=>({...r})),players:s.players.map(r=>({...r})),cannonballs:s.cannonballs.map(r=>({...r})),timestamp:s.timestamp+e*1e3,carrierDetection:new Map(s.carrierDetection)};for(const r of i.ships)vt(r,e);const n=3,o=e/n;for(let r=0;r<n;r++){for(const l of i.ships)l.position=l.position.add(l.velocity.mul(o)),l.rotation+=l.angularVelocity*o;Ct(i.ships)}const a=[];for(const r of i.players){const l=xt(r,i.ships,i.carrierDetection,t,e,i.timestamp);a.push(...l)}return i.carrierEvents=a,i}function vt(s,t){var M;const e=s.modules.find(b=>b.kind==="helm");let i=0;e&&e.moduleData&&(i=((M=e.moduleData.currentInput)==null?void 0:M.x)||0);const n=s.velocity.length(),o=5,a=40;let r;n<o?r=.05+n/o*.1:r=.15+Math.min(n/a,1)*.35;const l=1.5,c=i*r,d=.92;s.angularVelocity+=c*l*t,s.angularVelocity*=d,s.rotation=O.wrap(s.rotation+s.angularVelocity*t);let f=0,m=0;for(const b of s.modules)if(b.kind==="mast"&&b.moduleData){const I=b.moduleData,T=I.openness||0,E=I.windEfficiency||.8,N=T/100,H=Math.pow(N,.7)*E;f+=H,m++}const p=8e3,y=300;let g=y;if(m>0){const b=f/m,I=1+(m-1)*.1,T=1+f*.25,E=b*I*T;g=y+(p-y)*Math.min(E,1.25)}const w=u.from(Math.cos(s.rotation),Math.sin(s.rotation)).mul(g),S=60,P=w.div(S);s.velocity=s.velocity.add(P.mul(t));const k=.995,v=1-n*2e-4,C=Math.max(k*v,.98);s.velocity=s.velocity.mul(C)}function xt(s,t,e,i,n,o){let a=e.get(s.id);a||(a=ft(),e.set(s.id,a));const{newState:r,events:l}=mt(s,t,a,o);e.set(s.id,r);const c=r.currentCarrierId||0;s.carrierId=c,s.onDeck=c>0;const d=t.find(f=>f.id===c);return d&&s.onDeck?Pt(s,d,i,n):bt(s,t,i,n),l}function Pt(s,t,e,i){const n=t.position.sub(t.velocity.mul(i)),o=O.wrap(t.rotation-t.angularVelocity*i),a=O.diff(t.rotation,o),r=s.position.sub(n);let l;if(Math.abs(a)>.1)l=r.rotate(a);else{const M=r.perp().mul(t.angularVelocity*i);l=r.add(M)}const c=t.position.add(l),f=e.movement.mul(R.PLAYER_SPEED),m=t.velocity.add(r.perp().mul(t.angularVelocity)),p=s.velocity.sub(m),y=Math.log(2)/R.ICE_DRIFT_HALF_LIFE,g=Math.exp(-y*i),x=p.mul(g),w=m.add(x),S=f.mul(i);s.velocity=w.add(S);const P=c.add(f.mul(i)),k=R.EPS_FACTOR*s.radius,v=(e.actions&F.JUMP)!==0;if(v&&c.sub(t.position).length()>120*.7){console.log(`Player ${s.id} jumping near ship edge - assisting exit`);const T=c.sub(t.position).normalize().mul(R.PLAYER_SPEED*.5*i);s.position=c.add(f.mul(i)).add(T);return}const C=B.sweptCircleVsPlankSegments(c,P,s.radius,s.velocity,t,k,i,!1,v);if(C.collided){s.position=C.newPosition,s.velocity=C.newVelocity;const M=.95;s.velocity=s.velocity.mul(M)}else s.position=P,!kt(s.position,t)&&s.onDeck&&console.log(`Player ${s.id} fell through plank gap at position ${s.position.x.toFixed(1)}, ${s.position.y.toFixed(1)}!`)}function kt(s,t){const e=s.sub(t.position).rotate(-t.rotation),i=10;return D.pointInPolygon(e,t.hull,i)}function bt(s,t,e,i){const n=e.movement.mul(R.PLAYER_SPEED),o=.85,a=8;s.velocity=s.velocity.mul(o).add(n.mul(i*a));const r=10,c=u.from(.3,.1).normalize().mul(r*i);s.velocity=s.velocity.add(c);let f=s.position.add(s.velocity.mul(i)),m=s.velocity;for(const y of t){const g=R.EPS_FACTOR*s.radius;if(s.position.distanceTo(y.position)>400)continue;const S=B.sweptCircleVsPlankSegments(s.position,f,s.radius,m,y,g,i,!0,!1);if(S.collided){f=S.newPosition,m=S.newVelocity;break}}s.position=f,s.velocity=m;const p=R.PLAYER_SPEED*.7;s.velocity.lengthSq()>p*p&&(s.velocity=s.velocity.normalize().mul(p))}function Q(s){const t=K(s);let e;if(t&&t.moduleData){const n=t.moduleData;e=n.area&&Array.isArray(n.area)?n.area:s.hull}else e=s.hull;let i=0;for(const n of e){const o=n.length();i=Math.max(i,o)}return i+10}function Ct(s){for(let t=0;t<s.length;t++)for(let e=t+1;e<s.length;e++){const i=s[t],n=s[e],o=i.position.sub(n.position).length(),a=Q(i),r=Q(n),l=a+r;if(o<l){const c=Mt(i,n);c.isColliding&&(Dt(i,n,c),Tt(i,n,c))}}}function Mt(s,t){const e=K(s),i=K(t);if(!e||!i)return It(s,t);const n=e.moduleData,o=i.moduleData,a=n&&n.area&&Array.isArray(n.area)?n.area:s.hull,r=o&&o.area&&Array.isArray(o.area)?o.area:t.hull,l=a.map(d=>d.rotate(s.rotation).add(s.position)),c=r.map(d=>d.rotate(t.rotation).add(t.position));return et(l,c,s.position,t.position)}function K(s){return s.modules.find(t=>t.kind==="deck")}function It(s,t){const e=s.hull.map(n=>n.rotate(s.rotation).add(s.position)),i=t.hull.map(n=>n.rotate(t.rotation).add(t.position));return et(e,i,s.position,t.position)}function et(s,t,e,i){const n=[];for(let l=0;l<s.length;l++){const c=s[l],f=s[(l+1)%s.length].sub(c);n.push(u.from(-f.y,f.x).normalize())}for(let l=0;l<t.length;l++){const c=t[l],f=t[(l+1)%t.length].sub(c);n.push(u.from(-f.y,f.x).normalize())}let o=1/0,a=u.zero();for(const l of n){const c=X(s,l),d=X(t,l),f=Math.min(c.max,d.max)-Math.max(c.min,d.min);if(f<=0)return{isColliding:!1,normal:u.zero(),penetration:0,contactPoint:u.zero()};f<o&&(o=f,a=l)}return i.sub(e).dot(a)<0&&(a=a.mul(-1)),{isColliding:!0,normal:a,penetration:o,contactPoint:e.add(i).mul(.5)}}function X(s,t){let e=1/0,i=-1/0;for(const n of s){const o=n.dot(t);e=Math.min(e,o),i=Math.max(i,o)}return{min:e,max:i}}function Dt(s,t,e){const i=e.normal,n=e.penetration,o=1e3,a=1e3,r=o+a,l=a/r,c=o/r;s.position=s.position.sub(i.mul(n*l)),t.position=t.position.add(i.mul(n*c));const f=t.velocity.sub(s.velocity).dot(i);if(f>0)return;const p=-(1+.05)*f/r,y=i.mul(p),g=y.mul(a),x=y.mul(o);s.velocity=s.velocity.sub(g),t.velocity=t.velocity.add(x);const w=Math.abs(f),S=e.contactPoint.sub(s.position),P=e.contactPoint.sub(t.position),k=Math.min(w*5e-4,.002),v=S.cross(g.mul(-1))*k,C=P.cross(x)*k;s.angularVelocity+=v,t.angularVelocity+=C;const M=Math.max(.7,1-w*.01),b=Math.max(.6,1-w*.015);s.velocity=s.velocity.mul(M),t.velocity=t.velocity.mul(M),s.angularVelocity*=b,t.angularVelocity*=b}function Tt(s,t,e){const i=e.penetration*10,n=50,o=Math.min(i*2,15);J(s,e.contactPoint,o,n),J(t,e.contactPoint,o,n)}function J(s,t,e,i){for(const n of s.modules){if(n.kind!=="plank"||!n.moduleData||n.moduleData.kind!=="plank")continue;const o=n.moduleData;if(o.health<=0)continue;const r=n.localPos.rotate(s.rotation).add(s.position).sub(t).length();if(r<=i){const l=1-r/i,c=e*l;o.health=Math.max(0,o.health-c),o.health<=0&&c>0?(console.log(`💥 Collision destroyed plank! (${c.toFixed(1)} damage)`),o.destroyed=!0):c>0&&console.log(`⚔️ Collision damaged plank: ${o.health.toFixed(1)} health remaining`)}}}const z=class z{constructor(t){h(this,"config");h(this,"predictionHistory",[]);h(this,"rewindBuffer",[]);h(this,"authoritativeState",null);h(this,"lastAuthoritativeTick",0);h(this,"clientTick",0);h(this,"estimatedNetworkDelay",0);h(this,"serverTickOffset",0);h(this,"needsRollback",!1);h(this,"rollbackTick",0);h(this,"inputValidation",{totalInputs:0,invalidInputs:0,inputRateViolations:0,duplicateInputs:0,timestampAnomalies:0,lastInputTimestamp:0});h(this,"predictionMetrics",{rollbacksPerformed:0,averagePredictionError:0,maxPredictionError:0,correctionsApplied:0,serverMispredictions:0});this.config=t,this.initializeBuffers()}initializeBuffers(){this.rewindBuffer=[],this.predictionHistory=[]}update(t,e,i){if(this.clientTick++,!this.validateInputFrame(e)){console.warn("🚨 Invalid input frame detected, using previous input");const o=this.predictionHistory[this.predictionHistory.length-1];e=(o==null?void 0:o.inputFrame)||{tick:this.clientTick,movement:{x:0,y:0},actions:0}}if(this.updateRewindBuffer(this.clientTick,t,e,i),this.storePredictionState(this.clientTick,t,e),!this.config.enablePrediction)return t;const n=this.simulateStep(t,e,i);return this.needsRollback?this.performRollback(n,i):n}onAuthoritativeState(t){this.authoritativeState=t,this.lastAuthoritativeTick=t.tick;const e=this.findPredictionState(t.tick);e&&this.statesDiffer(t,e.worldState)&&(console.log(`🔄 Server correction detected at tick ${t.tick}`),this.scheduleRollback(t.tick)),this.cleanupOldStates(t.tick)}getInterpolatedState(t){return!this.config.enableInterpolation||!this.authoritativeState?this.authoritativeState:this.authoritativeState}isPredictionEnabled(){return this.config.enablePrediction}getPredictionStats(){return{clientTick:this.clientTick,authoritativeTick:this.lastAuthoritativeTick,predictionHistory:this.predictionHistory.length,rollbacksPerformed:0}}simulateStep(t,e,i){return wt(t,e,i)}storePredictionState(t,e,i){const n={tick:t,worldState:this.cloneWorldState(e),inputFrame:{...i},timestamp:Date.now(),serverConfirmed:!1,predictionError:0,correctionApplied:!1};this.predictionHistory.push(n),this.predictionHistory.length>z.MAX_PREDICTION_HISTORY&&this.predictionHistory.shift()}findPredictionState(t){return this.predictionHistory.find(e=>e.tick===t)||null}statesDiffer(t,e){if(t.players.length!==e.players.length)return!0;for(let i=0;i<t.players.length;i++){const n=t.players[i],o=e.players[i];if(!n||!o)return!0;const a=n.position.sub(o.position).length();if(a>1)return console.log(`Player ${n.id} position diff: ${a}`),!0;if(n.onDeck!==o.onDeck||n.carrierId!==o.carrierId)return!0}if(t.ships.length!==e.ships.length)return!0;for(let i=0;i<t.ships.length;i++){const n=t.ships[i],o=e.ships[i];if(!n||!o||n.position.sub(o.position).length()>2)return!0}return!1}scheduleRollback(t){this.needsRollback=!0,this.rollbackTick=t}performRollback(t,e){if(!this.authoritativeState)return this.needsRollback=!1,t;console.log(`🎬 Performing rollback from tick ${this.rollbackTick}`);let i=this.cloneWorldState(this.authoritativeState);const n=this.predictionHistory.filter(o=>o.tick>this.rollbackTick&&o.tick<=this.clientTick);for(const o of n)i=this.simulateStep(i,o.inputFrame,e);return this.updatePredictionHistory(n,i),this.needsRollback=!1,i}updatePredictionHistory(t,e){if(t.length>0){const i=t[t.length-1];i.worldState=this.cloneWorldState(e)}}cleanupOldStates(t){const e=t-this.config.rollbackLimit;this.predictionHistory=this.predictionHistory.filter(i=>i.tick>=e)}cloneWorldState(t){return{tick:t.tick,timestamp:t.timestamp,ships:t.ships.map(e=>({...e,position:e.position.clone(),velocity:e.velocity.clone(),hull:e.hull.map(i=>i.clone()),modules:e.modules.map(i=>({...i}))})),players:t.players.map(e=>({...e,position:e.position.clone(),velocity:e.velocity.clone()})),cannonballs:t.cannonballs.map(e=>({...e,position:e.position.clone(),velocity:e.velocity.clone(),firingVelocity:e.firingVelocity.clone(),smokeTrail:e.smokeTrail?e.smokeTrail.map(i=>({...i,position:i.position.clone()})):[]})),carrierDetection:new Map(t.carrierDetection)}}validateInputFrame(t){const e=Date.now();if(this.inputValidation.totalInputs++,e-this.inputValidation.lastInputTimestamp<8)return this.inputValidation.inputRateViolations++,!1;if(Math.sqrt(t.movement.x*t.movement.x+t.movement.y*t.movement.y)>1.5)return this.inputValidation.invalidInputs++,!1;if(this.inputValidation.lastInputTimestamp>0){const o=e-this.inputValidation.lastInputTimestamp;(o>100||o<0)&&this.inputValidation.timestampAnomalies++}return this.inputValidation.lastInputTimestamp=e,!0}updateRewindBuffer(t,e,i,n){const o={tick:t,worldState:this.cloneWorldState(e),inputFrame:{...i},timestamp:Date.now(),networkDelay:this.estimatedNetworkDelay};this.rewindBuffer.push(o),this.rewindBuffer.length>z.REWIND_BUFFER_SIZE&&this.rewindBuffer.shift()}getRewindBufferState(t){return this.rewindBuffer.find(e=>e.tick===t)||null}getEnhancedPredictionStats(){const t=this.rewindBuffer[0],e=this.rewindBuffer[this.rewindBuffer.length-1];return{prediction:this.predictionMetrics,inputValidation:this.inputValidation,rewindBuffer:{size:this.rewindBuffer.length,oldestTick:(t==null?void 0:t.tick)||0,newestTick:(e==null?void 0:e.tick)||0,coverage:e&&t?e.timestamp-t.timestamp:0}}}};h(z,"REWIND_BUFFER_SIZE",16),h(z,"MAX_PREDICTION_HISTORY",32);let U=z;class Et{constructor(t,e){h(this,"canvas");h(this,"config");h(this,"inputState");h(this,"actionMappings",[]);h(this,"currentInputFrame");h(this,"inputFrameCounter",0);h(this,"onInputFrame",null);h(this,"lastInteractionTime",0);h(this,"interactionCooldown",500);this.canvas=t,this.config=e,this.inputState={pressedKeys:new Set,mousePosition:u.from(t.width/2,t.height/2),mouseWorldPosition:u.zero(),leftMouseDown:!1,rightMouseDown:!1,leftMouseReleased:!1,gamepadConnected:!1,gamepadState:null},this.currentInputFrame={tick:0,movement:u.zero(),actions:0},this.setupEventListeners(),this.setupActionMappings()}update(t){this.updateGamepad(),this.generateInputFrame(),this.onInputFrame&&this.onInputFrame(this.currentInputFrame),this.resetFrameFlags()}updateMouseWorldPosition(t){this.inputState.mouseWorldPosition=t.clone()}getCurrentInputFrame(){return{...this.currentInputFrame}}getMouseWorldPosition(){return this.inputState.mouseWorldPosition.clone()}isActionActive(t){const e=this.actionMappings.find(i=>i.action===t);return e?e.pressed:!1}updateConfig(t){this.config={...t},this.setupActionMappings(),console.log("🎮 Input configuration updated")}shutdown(){this.removeEventListeners(),console.log("🎮 Input manager shutdown")}setupEventListeners(){window.addEventListener("keydown",this.onKeyDown.bind(this)),window.addEventListener("keyup",this.onKeyUp.bind(this)),this.canvas.addEventListener("mousemove",this.onMouseMove.bind(this)),this.canvas.addEventListener("mousedown",this.onMouseDown.bind(this)),this.canvas.addEventListener("mouseup",this.onMouseUp.bind(this)),this.canvas.addEventListener("wheel",this.onMouseWheel.bind(this)),this.canvas.addEventListener("contextmenu",this.onContextMenu.bind(this)),window.addEventListener("gamepadconnected",this.onGamepadConnected.bind(this)),window.addEventListener("gamepaddisconnected",this.onGamepadDisconnected.bind(this)),console.log("🎮 Input event listeners setup")}removeEventListeners(){window.removeEventListener("keydown",this.onKeyDown.bind(this)),window.removeEventListener("keyup",this.onKeyUp.bind(this)),this.canvas.removeEventListener("mousemove",this.onMouseMove.bind(this)),this.canvas.removeEventListener("mousedown",this.onMouseDown.bind(this)),this.canvas.removeEventListener("mouseup",this.onMouseUp.bind(this)),this.canvas.removeEventListener("wheel",this.onMouseWheel.bind(this)),this.canvas.removeEventListener("contextmenu",this.onContextMenu.bind(this)),window.removeEventListener("gamepadconnected",this.onGamepadConnected.bind(this)),window.removeEventListener("gamepaddisconnected",this.onGamepadDisconnected.bind(this))}setupActionMappings(){this.actionMappings=[];for(const[t,e]of this.config.keyBindings.entries())this.actionMappings.push({action:t,keyCode:e,pressed:!1})}generateInputFrame(){const t=this.calculateMovementVector(),e=this.calculateActionBitmask();this.currentInputFrame={tick:this.inputFrameCounter++,movement:t,actions:e}}calculateMovementVector(){let t=u.zero();const e=this.isActionActive("move_forward"),i=this.isActionActive("move_backward"),n=this.isActionActive("move_left"),o=this.isActionActive("move_right");return e&&(t=t.add(u.from(0,-1))),i&&(t=t.add(u.from(0,1))),n&&(t=t.add(u.from(-1,0))),o&&(t=t.add(u.from(1,0))),t.lengthSq()>1&&(t=t.normalize()),t}calculateActionBitmask(){let t=0;return this.isActionActive("jump")&&(t|=F.JUMP),this.isActionActive("interact")&&this.canInteract()&&(t|=F.INTERACT,this.lastInteractionTime=Date.now()),this.isActionActive("dismount")&&this.canInteract()&&(t|=F.DISMOUNT,this.lastInteractionTime=Date.now()),this.isActionActive("destroy_plank")&&(t|=F.DESTROY_PLANK),t}canInteract(){return Date.now()-this.lastInteractionTime>this.interactionCooldown}resetFrameFlags(){this.inputState.leftMouseReleased=!1}updateGamepad(){if(!this.config.gamepadEnabled||!this.inputState.gamepadConnected)return;const e=navigator.getGamepads()[0];if(!e){this.inputState.gamepadConnected=!1;return}this.inputState.gamepadState={axes:Array.from(e.axes),buttons:e.buttons.map(i=>i.pressed)}}onKeyDown(t){this.inputState.pressedKeys.add(t.code);for(const e of this.actionMappings)e.keyCode===t.code&&(e.pressed=!0);switch(t.code){}}onKeyUp(t){this.inputState.pressedKeys.delete(t.code);for(const e of this.actionMappings)e.keyCode===t.code&&(e.pressed=!1)}onMouseMove(t){const e=this.canvas.getBoundingClientRect();this.inputState.mousePosition=u.from(t.clientX-e.left,t.clientY-e.top)}onMouseDown(t){t.preventDefault(),t.button===0?this.inputState.leftMouseDown=!0:t.button===2&&(this.inputState.rightMouseDown=!0)}onMouseUp(t){t.preventDefault(),t.button===0?(this.inputState.leftMouseDown=!1,this.inputState.leftMouseReleased=!0):t.button===2&&(this.inputState.rightMouseDown=!1)}onMouseWheel(t){t.preventDefault()}onContextMenu(t){t.preventDefault()}onGamepadConnected(t){console.log("🎮 Gamepad connected:",t.gamepad.id),this.inputState.gamepadConnected=!0}onGamepadDisconnected(t){console.log("🎮 Gamepad disconnected:",t.gamepad.id),this.inputState.gamepadConnected=!1,this.inputState.gamepadState=null}}const Z={helm:u.from(0,-15),"steering-wheel":u.from(0,-15),cannon:u.from(0,-20),mast:u.from(0,15),seat:u.from(0,0),ladder:u.from(0,-10),custom:u.zero()},tt={helm:30,"steering-wheel":30,cannon:25,mast:35,seat:20,ladder:25,custom:20};class Rt{constructor(){h(this,"mountedPlayers",new Map);h(this,"lastInteractionResults",[])}update(t,e){this.updateMountedPlayerPositions(t),this.lastInteractionResults=[],this.updateModuleSystems(t,e)}interactWithModule(t,e,i){const n=t.players.find(c=>c.id===e),{ship:o,module:a}=this.findModule(t,i),r=this.validateInteraction(n,o,a);return r.result!=="success"?r:this.mountedPlayers.get(e)!==void 0?this.dismountPlayer(t,e):this.isModuleOccupied(i)?{playerId:e,moduleId:i,result:"failed_occupied",message:"Module is already occupied"}:this.mountPlayer(t,e,i,n,o,a)}dismountPlayer(t,e){const i=this.mountedPlayers.get(e);if(i===void 0)return{playerId:e,moduleId:-1,result:"failed_invalid_module",message:"Player is not mounted to any module"};this.mountedPlayers.delete(e),t.players.find(o=>o.id===e);const n={playerId:e,moduleId:i,result:"success",message:"Dismounted successfully"};return this.lastInteractionResults.push(n),n}getNearbyInteractableModules(t,e){const i=t.players.find(a=>a.id===e);if(!i||!i.onDeck)return[];const n=t.ships.find(a=>a.id===i.carrierId);if(!n)return[];const o=[];for(const a of n.modules){if(a.kind==="deck")continue;const r=this.getModuleWorldPosition(n,a),l=i.position.sub(r).length(),c=tt[a.kind]||20;l<=c&&o.push(a)}return o}isPlayerMounted(t){return this.mountedPlayers.has(t)}getPlayerMountedModule(t,e){const i=this.mountedPlayers.get(e);if(i===void 0)return null;const{module:n}=this.findModule(t,i);return n}getLastInteractionResults(){return[...this.lastInteractionResults]}validateInteraction(t,e,i){if(!t)return{playerId:0,moduleId:-1,result:"failed_invalid_module",message:"Player not found"};if(!t.onDeck)return{playerId:t.id,moduleId:-1,result:"failed_not_on_deck",message:"Must be on deck to interact with modules"};if(!e||!i)return{playerId:t.id,moduleId:-1,result:"failed_invalid_module",message:"Module not found"};const n=this.getModuleWorldPosition(e,i),o=t.position.sub(n).length(),a=tt[i.kind]||20;return o>a?{playerId:t.id,moduleId:i.id,result:"failed_out_of_range",message:`Too far from module (${o.toFixed(1)} > ${a})`}:{playerId:t.id,moduleId:i.id,result:"success"}}mountPlayer(t,e,i,n,o,a){this.mountedPlayers.set(e,i);const r=this.getModuleWorldPosition(o,a),l=Z[a.kind]||u.zero(),c=r.add(l.rotate(o.rotation));n.position=c,n.velocity=u.zero();const d={playerId:e,moduleId:i,result:"success",message:`Mounted to ${a.kind} module`};return this.lastInteractionResults.push(d),d}findModule(t,e){for(const i of t.ships){const n=i.modules.find(o=>o.id===e);if(n)return{ship:i,module:n}}return{ship:null,module:null}}getModuleWorldPosition(t,e){return e.localPos.rotate(t.rotation).add(t.position)}isModuleOccupied(t){for(const[,e]of this.mountedPlayers)if(e===t)return!0;return!1}updateMountedPlayerPositions(t){for(const[e,i]of this.mountedPlayers){const n=t.players.find(r=>r.id===e),{ship:o,module:a}=this.findModule(t,i);if(n&&o&&a){const r=this.getModuleWorldPosition(o,a),l=Z[a.kind]||u.zero(),c=r.add(l.rotate(o.rotation));n.position=c,n.velocity=u.zero()}}}updateModuleSystems(t,e){for(const i of t.ships)for(const n of i.modules)switch(n.kind){case"cannon":this.updateCannonModule(n,e);break;case"mast":this.updateMastModule(n,e);break}}updateCannonModule(t,e){if(!t.moduleData||t.moduleData.kind!=="cannon")return;const i=t.moduleData;i.timeSinceLastFire!==void 0&&i.reloadTime!==void 0&&i.timeSinceLastFire<i.reloadTime&&(i.timeSinceLastFire+=e)}updateMastModule(t,e){!t.moduleData||t.moduleData.kind!=="mast"||t.moduleData}}class At{constructor(t,e){h(this,"config");h(this,"elements",new Map);h(this,"showDebugOverlay",!1);h(this,"showNetworkStats",!1);h(this,"showControlHints",!0);this.config=e,this.initializeUIElements(),this.setupEventListeners()}update(t){this.showDebugOverlay=this.config.debug.enabled,this.showNetworkStats=this.config.debug.showNetworkStats}render(t,e){const i=["hud","control_hints","network_stats","debug_overlay"];for(const n of i){const o=this.elements.get(n);if(o&&o.visible)try{o.render(t,e)}catch(a){console.error(`Error rendering UI element ${n}:`,a)}}}toggleDebugOverlay(){this.showDebugOverlay=!this.showDebugOverlay;const t=this.elements.get("debug_overlay");t&&(t.visible=this.showDebugOverlay)}toggleNetworkStats(){this.showNetworkStats=!this.showNetworkStats;const t=this.elements.get("network_stats");t&&(t.visible=this.showNetworkStats)}onCanvasResize(t,e){console.log(`📱 UI canvas resized to ${t}x${e}`)}shutdown(){this.removeEventListeners(),console.log("🖥️ UI manager shutdown")}initializeUIElements(){this.elements.set("hud",new Nt),this.elements.set("debug_overlay",new Lt),this.elements.set("network_stats",new _t),this.elements.set("control_hints",new Ot),this.updateElementVisibility()}updateElementVisibility(){this.elements.get("hud").visible=!0,this.elements.get("debug_overlay").visible=this.showDebugOverlay,this.elements.get("network_stats").visible=this.showNetworkStats,this.elements.get("control_hints").visible=this.showControlHints}setupEventListeners(){window.addEventListener("keydown",this.onKeyDown.bind(this))}removeEventListeners(){window.removeEventListener("keydown",this.onKeyDown.bind(this))}onKeyDown(t){switch(t.code){case"KeyL":this.toggleDebugOverlay();break;case"F1":this.showControlHints=!this.showControlHints,this.updateElementVisibility();break}}}class Nt{constructor(){h(this,"type","hud");h(this,"visible",!0)}render(t,e){const i=e.worldState.players[0];if(!i)return;t.fillStyle="#ffffff",t.font="16px Arial",t.textAlign="left",[`FPS: ${e.fps}`,`Position: ${i.position.x.toFixed(1)}, ${i.position.y.toFixed(1)}`,`On Deck: ${i.onDeck?"Yes":"No"}`,`Carrier: ${i.carrierId}`].forEach((o,a)=>{t.fillText(o,20,30+a*20)})}}class Lt{constructor(){h(this,"type","debug_overlay");h(this,"visible",!1)}render(t,e){const i=e.worldState.players[0],n=e.camera.getState();if(!i)return;t.fillStyle="rgba(0, 0, 0, 0.7)",t.fillRect(10,10,400,300),t.fillStyle="#00ff00",t.font="14px monospace",t.textAlign="left",["=== DEBUG INFO ===",`Tick: ${e.worldState.tick}`,`Player Velocity: ${i.velocity.x.toFixed(2)}, ${i.velocity.y.toFixed(2)}`,`Camera Position: ${n.position.x.toFixed(1)}, ${n.position.y.toFixed(1)}`,`Camera Zoom: ${n.zoom.toFixed(2)}x`,`Ships: ${e.worldState.ships.length}`,`Cannonballs: ${e.worldState.cannonballs.length}`,"","=== CONTROLS ===","L - Toggle this overlay","F1 - Toggle control hints","WASD - Movement","Space - Jump off ship","E - Interact with modules"].forEach((a,r)=>{t.fillText(a,20,35+r*16)})}}class _t{constructor(){h(this,"type","network_stats");h(this,"visible",!1)}render(t,e){const i=e.networkStats;t.fillStyle="rgba(0, 0, 0, 0.8)",t.fillRect(t.canvas.width-220,10,210,120),t.fillStyle="#00ffff",t.font="14px monospace",t.textAlign="left",["=== NETWORK ===",`Ping: ${i.ping}ms`,`Packet Loss: ${i.packetLoss.toFixed(1)}%`,`Sent: ${(i.bytesSent/1024).toFixed(1)}KB`,`Received: ${(i.bytesReceived/1024).toFixed(1)}KB`,`Messages: ${i.messagesSent}/${i.messagesReceived}`].forEach((o,a)=>{t.fillText(o,t.canvas.width-210,30+a*16)})}}class Ot{constructor(){h(this,"type","control_hints");h(this,"visible",!0)}render(t,e){t.fillStyle="rgba(0, 0, 0, 0.6)",t.fillRect(10,t.canvas.height-120,300,110),t.fillStyle="#ffff00",t.font="12px Arial",t.textAlign="left",["CONTROLS:","WASD - Move","Mouse - Look direction","Space - Jump off ship","E - Interact with modules","R - Dismount from modules","Q - Damage planks"].forEach((n,o)=>{t.fillText(n,20,t.canvas.height-105+o*14)})}}const L={CANNON_FIRE:"cannon_fire",WATER_SPLASH:"water_splash",WOOD_BREAK:"wood_break",SAIL_FLAP:"sail_flap",ROPE_CREAK:"rope_creak",FOOTSTEPS_WOOD:"footsteps_wood",MODULE_INTERACT:"module_interact"},q={MAIN_THEME:"main_theme",BATTLE_MUSIC:"battle_music",AMBIENT_OCEAN:"ambient_ocean"};class zt{constructor(t){h(this,"config");h(this,"audioContext",null);h(this,"masterGain",null);h(this,"musicGain",null);h(this,"sfxGain",null);h(this,"voiceGain",null);h(this,"sources",new Map);h(this,"loadedBuffers",new Map);h(this,"listenerPosition",u.zero());this.config=t}async initialize(){if(!this.config.enabled){console.log("🔇 Audio disabled by configuration");return}try{this.audioContext=new(window.AudioContext||window.webkitAudioContext),this.masterGain=this.audioContext.createGain(),this.masterGain.connect(this.audioContext.destination),this.masterGain.gain.value=this.config.masterVolume,this.setupVolumeNodes(),await this.loadAudioAssets(),console.log("🔊 Audio system initialized")}catch(t){console.error("❌ Failed to initialize audio system:",t)}}update(t){!this.audioContext||!this.config.enabled||(this.updateSpatialAudio(),this.cleanupFinishedSources())}playSFX(t,e,i=1){if(!this.canPlayAudio())return"";const n=this.loadedBuffers.get(t);if(!n)return console.warn(`Sound effect not found: ${t}`),"";const o=`sfx_${t}_${Date.now()}_${Math.random()}`,a={id:o,type:"sfx",buffer:n,source:null,gainNode:null,position:e==null?void 0:e.clone(),loop:!1,playing:!1};return this.playAudioSource(a,i),this.sources.set(o,a),o}playMusic(t,e=!0,i=1){if(!this.canPlayAudio())return"";this.stopAllMusic();const n=this.loadedBuffers.get(t);if(!n)return console.warn(`Music track not found: ${t}`),"";const o=`music_${t}`,a={id:o,type:"music",buffer:n,source:null,gainNode:null,loop:e,playing:!1};return this.playAudioSource(a,i),this.sources.set(o,a),o}stopAudio(t){const e=this.sources.get(t);!e||!e.source||(e.source.stop(),e.playing=!1)}stopAllMusic(){for(const[t,e]of this.sources)e.type==="music"&&e.playing&&this.stopAudio(t)}setListenerPosition(t){this.listenerPosition=t.clone()}updateConfig(t){this.config={...t},this.canPlayAudio()&&(this.masterGain.gain.value=t.masterVolume,this.musicGain.gain.value=t.musicVolume,this.sfxGain.gain.value=t.sfxVolume,this.voiceGain.gain.value=t.voiceVolume,console.log("🔊 Audio configuration updated"))}shutdown(){for(const[t,e]of this.sources)e.playing&&this.stopAudio(t);this.audioContext&&this.audioContext.state!=="closed"&&this.audioContext.close(),this.sources.clear(),this.loadedBuffers.clear(),console.log("🔇 Audio system shutdown")}canPlayAudio(){return this.config.enabled&&this.audioContext!==null&&this.masterGain!==null}setupVolumeNodes(){!this.audioContext||!this.masterGain||(this.musicGain=this.audioContext.createGain(),this.musicGain.connect(this.masterGain),this.musicGain.gain.value=this.config.musicVolume,this.sfxGain=this.audioContext.createGain(),this.sfxGain.connect(this.masterGain),this.sfxGain.gain.value=this.config.sfxVolume,this.voiceGain=this.audioContext.createGain(),this.voiceGain.connect(this.masterGain),this.voiceGain.gain.value=this.config.voiceVolume)}async loadAudioAssets(){const t=[{id:L.CANNON_FIRE,duration:1},{id:L.WATER_SPLASH,duration:.5},{id:L.WOOD_BREAK,duration:.3},{id:L.SAIL_FLAP,duration:.8},{id:L.ROPE_CREAK,duration:1.2},{id:L.FOOTSTEPS_WOOD,duration:.2},{id:L.MODULE_INTERACT,duration:.1},{id:q.MAIN_THEME,duration:120},{id:q.BATTLE_MUSIC,duration:180},{id:q.AMBIENT_OCEAN,duration:300}];for(const e of t){const i=await this.createSampleBuffer(e.id,e.duration);i&&this.loadedBuffers.set(e.id,i)}console.log(`🎵 Loaded ${this.loadedBuffers.size} audio assets`)}async createSampleBuffer(t,e){if(!this.audioContext)return null;const i=this.audioContext.sampleRate,n=i*e,o=this.audioContext.createBuffer(2,n,i);for(let a=0;a<o.numberOfChannels;a++){const r=o.getChannelData(a);for(let l=0;l<n;l++){let c=0;if(t.includes("cannon")||t.includes("explosion"))c=(Math.random()*2-1)*Math.exp(-l/(n*.3))*.5;else if(t.includes("water")||t.includes("splash"))c=(Math.random()*2-1)*Math.exp(-l/(n*.5))*.3;else if(t.includes("music")||t.includes("theme")){const d=440*Math.pow(2,Math.sin(l/n*Math.PI*4)*.5);c=Math.sin(2*Math.PI*d*l/i)*.1}else c=Math.sin(2*Math.PI*440*l/i)*.2;r[l]=c}}return o}playAudioSource(t,e){if(!this.audioContext||!t.buffer)return;const i=this.audioContext.createBufferSource(),n=this.audioContext.createGain();i.buffer=t.buffer,i.loop=t.loop,n.gain.value=e;let o;switch(t.type){case"music":o=this.musicGain;break;case"sfx":o=this.sfxGain;break;case"voice":o=this.voiceGain;break;default:o=this.sfxGain;break}i.connect(n),n.connect(o),t.position&&this.config.spatialAudio&&this.applySpatialAudio(n,t.position),t.source=i,t.gainNode=n,t.playing=!0,i.onended=()=>{t.playing=!1},i.start()}applySpatialAudio(t,e){if(!this.audioContext)return;const i=this.listenerPosition.sub(e).length(),o=Math.max(0,1-i/500);t.gain.value*=o}updateSpatialAudio(){if(this.config.spatialAudio)for(const t of this.sources.values())t.playing&&t.position&&t.gainNode&&this.applySpatialAudio(t.gainNode,t.position)}cleanupFinishedSources(){var t;for(const[e,i]of this.sources)!i.playing&&i.source&&(i.source.disconnect(),(t=i.gainNode)==null||t.disconnect(),this.sources.delete(e))}}var _=(s=>(s.INITIALIZING="initializing",s.CONNECTING="connecting",s.CONNECTED="connected",s.IN_GAME="in_game",s.DISCONNECTED="disconnected",s.ERROR="error",s))(_||{});class Wt{constructor(t,e){h(this,"canvas");h(this,"config");h(this,"state","initializing");h(this,"renderSystem");h(this,"networkManager");h(this,"predictionEngine");h(this,"inputManager");h(this,"uiManager");h(this,"audioManager");h(this,"moduleInteractionSystem");h(this,"authoritativeWorldState",null);h(this,"predictedWorldState",null);h(this,"demoWorldState",null);h(this,"camera");h(this,"running",!1);h(this,"lastFrameTime",0);h(this,"accumulator",0);h(this,"clientTickDuration");h(this,"frameCount",0);h(this,"fpsTimer",0);h(this,"currentFPS",0);this.canvas=t,this.config=e,this.clientTickDuration=1e3/e.prediction.clientTickRate,console.log(`🎮 Client initialized with ${e.prediction.clientTickRate}Hz tick rate`)}async initialize(){try{this.state="initializing",console.log("⚡ Initializing client systems..."),this.camera=new ct({width:this.canvas.width,height:this.canvas.height},{position:u.from(600,400),zoom:1,rotation:0}),this.renderSystem=new rt(this.canvas,this.config.graphics),await this.renderSystem.initialize(),this.networkManager=new lt(this.config.network),this.networkManager.setWorldStateHandler(this.onServerWorldState.bind(this)),this.networkManager.setConnectionStateHandler(this.onConnectionStateChanged.bind(this)),this.predictionEngine=new U(this.config.prediction),this.inputManager=new Et(this.canvas,this.config.input),this.inputManager.onInputFrame=this.onInputFrame.bind(this),this.uiManager=new At(this.canvas,this.config),this.audioManager=new zt(this.config.audio),await this.audioManager.initialize(),this.moduleInteractionSystem=new Rt,this.setupCanvasResizeHandler(),console.log("✅ All client systems initialized successfully")}catch(t){throw this.state="error",console.error("❌ Failed to initialize client systems:",t),t}}async start(){if(this.running){console.warn("⚠️ Client is already running");return}try{console.log("🚀 Starting client application..."),this.state="connecting";try{await this.networkManager.connect("Player"),console.log("✅ Connected to physics server")}catch(t){console.warn("⚠️ Could not connect to physics server:",t),console.log("🎮 Running in offline mode - UI and local systems will work"),this.state="disconnected",this.createDemoWorldState()}this.running=!0,this.lastFrameTime=performance.now(),requestAnimationFrame(this.gameLoop.bind(this)),console.log("✅ Client application started successfully")}catch(t){throw this.state="error",console.error("❌ Failed to start client application:",t),t}}shutdown(){var t,e,i,n,o;console.log("🛑 Shutting down client application..."),this.running=!1,this.state="disconnected",(t=this.networkManager)==null||t.disconnect(),(e=this.audioManager)==null||e.shutdown(),(i=this.inputManager)==null||i.shutdown(),(n=this.uiManager)==null||n.shutdown(),(o=this.renderSystem)==null||o.shutdown(),console.log("✅ Client application shutdown complete")}gameLoop(t){if(!this.running)return;const e=t-this.lastFrameTime;this.lastFrameTime=t;const i=Math.min(e,100);for(this.accumulator+=i,this.updateFPSTracking(e);this.accumulator>=this.clientTickDuration;)this.updateClient(this.clientTickDuration),this.accumulator-=this.clientTickDuration;this.updateVariableTimestep(i);const n=this.accumulator/this.clientTickDuration;this.renderFrame(n),requestAnimationFrame(this.gameLoop.bind(this))}updateClient(t){const e=t/1e3;this.inputManager.update(e),this.authoritativeWorldState&&this.state==="in_game"&&(this.predictedWorldState=this.predictionEngine.update(this.authoritativeWorldState,this.inputManager.getCurrentInputFrame(),e),this.predictedWorldState&&this.updateCamera(this.predictedWorldState,e),this.moduleInteractionSystem.update(this.predictedWorldState||this.authoritativeWorldState,e))}updateVariableTimestep(t){const e=t/1e3;this.uiManager.update(e),this.audioManager.update(e),this.renderSystem.update(e)}renderFrame(t){const e=this.predictedWorldState||this.authoritativeWorldState||this.demoWorldState;e?(this.renderSystem.renderWorld(e,this.camera,t),this.uiManager.render(this.renderSystem.getContext(),{worldState:e,camera:this.camera,fps:this.currentFPS,networkStats:this.networkManager.getStats(),config:this.config})):this.renderSystem.renderLoadingScreen(this.state,this.camera)}updateCamera(t,e){const i=t.players[0];if(!i)return;const n=5;this.camera.setTarget(i.position),this.camera.followTarget(i.position,n,e)}onInputFrame(t){this.networkManager.sendInput(t)}onServerWorldState(t){this.authoritativeWorldState=t,this.predictionEngine.onAuthoritativeState(t),this.state==="connected"&&(this.state="in_game",console.log("🎮 Entered game world"))}onConnectionStateChanged(t){t===W.CONNECTED?(this.state="connected",console.log("🌐 Connected to server")):t===W.DISCONNECTED||t===W.ERROR?(this.state="disconnected",console.log("🔌 Disconnected from server:",t)):t===W.CONNECTING&&(this.state="connecting",console.log("🔄 Connecting to server..."))}setupCanvasResizeHandler(){new ResizeObserver(e=>{for(const i of e){const{width:n,height:o}=i.contentRect;this.canvas.width=n,this.canvas.height=o,this.camera.setViewport({width:n,height:o}),this.renderSystem.onCanvasResize(n,o),this.uiManager.onCanvasResize(n,o)}}).observe(this.canvas)}updateFPSTracking(t){this.frameCount++,this.fpsTimer+=t,this.fpsTimer>=1e3&&(this.currentFPS=Math.round(this.frameCount*1e3/this.fpsTimer),this.frameCount=0,this.fpsTimer=0)}getState(){return this.state}getConfig(){return this.config}updateConfig(t){this.config={...this.config,...t},this.renderSystem.updateConfig(this.config.graphics),this.audioManager.updateConfig(this.config.audio),this.inputManager.updateConfig(this.config.input),console.log("⚙️ Client configuration updated")}createDemoWorldState(){return{players:[{id:"demo-player",position:{x:0,y:0},velocity:{x:0,y:0},rotation:0,health:100,ship:{modules:[{type:"core",position:{x:0,y:0}},{type:"cannon",position:{x:-1,y:0}},{type:"cannon",position:{x:1,y:0}}]}}],projectiles:[],particles:[],tick:0}}}const $={network:{serverUrl:"ws://192.168.56.10:8080",maxReconnectAttempts:5,reconnectDelay:2e3,heartbeatInterval:3e4,timeoutDuration:1e4,protocol:"websocket",fallbackToWebSocket:!0},graphics:{targetFPS:60,vsync:!0,antialiasing:!0,particleQuality:"medium",shadowQuality:"medium",textureQuality:"high",renderDistance:2e3},audio:{masterVolume:1,musicVolume:.7,sfxVolume:.8,voiceVolume:1,enabled:!0,spatialAudio:!0},input:{mouseSensitivity:1,invertMouseY:!1,keyBindings:new Map([["move_forward","KeyW"],["move_backward","KeyS"],["move_left","KeyA"],["move_right","KeyD"],["jump","Space"],["interact","KeyE"],["dismount","KeyR"],["destroy_plank","KeyQ"],["toggle_debug","KeyL"],["toggle_plank_bounds","KeyP"],["toggle_collision_tracker","KeyT"],["toggle_water_mode","KeyN"],["toggle_camera_mode","KeyC"]]),gamepadEnabled:!0,gamepadDeadzone:.1},prediction:{clientTickRate:120,serverTickRate:30,interpolationBuffer:100,interpolationDelay:66,extrapolationLimit:50,rollbackLimit:10,predictionErrorThreshold:5,enablePrediction:!0,enableInterpolation:!0},debug:{enabled:!1,showNetworkStats:!1,showPerformanceStats:!1,showCollisionBounds:!1,showPlankBounds:!1,showCarrierDetection:!1,logLevel:"info",recordReplays:!1,maxReplayLength:300},canvas:{width:1920,height:1080}};async function j(){try{let s=function(){t.width=window.innerWidth,t.height=window.innerHeight};console.log("🏴‍☠️ Pirate MMO Client Starting...");const t=document.getElementById("gameCanvas");if(!t)throw new Error("Canvas element #gameCanvas not found");s(),window.addEventListener("resize",s);const e={...$,...Ft(),canvas:{width:t.width,height:t.height}},i=new Wt(t,e);await i.initialize(),i.start(),console.log("✅ Pirate MMO Client Started Successfully"),window.addEventListener("beforeunload",()=>{console.log("🛑 Client Shutting Down..."),i.shutdown()})}catch(s){console.error("❌ Failed to start Pirate MMO Client:",s);const t=document.createElement("div");t.style.cssText=`
      position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%);
      background: #ff4444; color: white; padding: 20px; border-radius: 10px;
      font-family: Arial, sans-serif; font-size: 16px; z-index: 10000;
    `,t.textContent=`Failed to start game: ${s instanceof Error?s.message:"Unknown error"}`,document.body.appendChild(t)}}function Ft(){const s=new URLSearchParams(window.location.search),t={};if(s.has("server")&&(t.network={...$.network,serverUrl:s.get("server")}),s.has("debug")&&(t.debug={...$.debug,enabled:s.get("debug")==="true"}),s.has("fps")){const e=parseInt(s.get("fps"),10);e>0&&e<=120&&(t.graphics={...$.graphics,targetFPS:e})}return t}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",j):j();j();
